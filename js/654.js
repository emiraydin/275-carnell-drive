(self.webpackChunkmp_webgl=self.webpackChunkmp_webgl||[]).push([[654],{90654:(t,e,i)=>{"use strict";i.d(e,{$7:()=>I,uc:()=>$,N3:()=>L});var s,a=i(81396),n=i(45837),o=i(90304),r=i(59370),h=i(69505),c=i(49827),l=i(67944),d=i(97998);!function(t){t[t.NONE=0]="NONE",t[t.NUMERIC=1]="NUMERIC",t[t.ASCII=2]="ASCII"}(s||(s={}));const u={pages:[],chars:[],info:{face:"Loading",size:0,bold:0,italic:0,charset:[],unicode:1,stretchH:100,smooth:1,aa:1,padding:[0,0,0,0],spacing:[0,0],os2version:1},common:{lineHeight:0,base:0,scaleW:1,scaleH:1,pages:0,packed:0,alphaChnl:0,redChnl:0,greenChnl:0,blueChnl:0},kernings:[]};var p=i(59279),g=i(95912);const f=(()=>{let t=null;return function(){return t||(t=Promise.all([i.e(764),i.e(422),i.e(143)]).then(i.bind(i,44422)).then((t=>t.load))),t}})();var m=i(60668);const x=function(){const t=document.createElement("a");return document.body.appendChild(t),t.style.display="none",(e,i)=>{const s=e.toDataURL();t.href=s,t.download=i,t.click()}}(),b=(t,e)=>{const i=document.createElement("a");i.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),i.setAttribute("download",e),i.click()};var k=i(75287);class y extends k.T{constructor(t){super(),this.packer=t,this.fontData=u,this.textures=[]}update(t,e){this.fontData=e,this.textures.forEach((t=>t.dispose())),this.textures.length=0,this.textures.push(...t),this.commit()}addCharsIfNeeded(t){this.packer.addChars(t)}}const M=new d.Z("font-packer"),C=.2,v="1"===(0,p.eY)("exportfont","0"),T=!0,w=!0,S={log:!1,marks:{rebuild:"rebuild",kern:"kerning",metrics:"metrics",pack:"pack",texture:"texture",bmfont:"load-bmfont"}};function F(t){return Math.log(t)/Math.log(2)%1==0}class O{constructor(t,e){if(this.needsRebuild=!1,this._atlas=new y(this),this._codepointToTexCoord={},this._loading=!1,this._loaded=!1,this._addedChars=[],this.charSet=new Set,this.kerningsMap={},this.measureMap={},this.metricsMap={},this.scale=1,this.updateCanvas=(t,e)=>{try{this.canvas||(this.canvas=document.createElement("canvas")),this.canvas.height=t,this.canvas.width=e;const i=this.canvas&&this.canvas.getContext("2d");if(!i)throw Error("Unable to create canvas context for font-packer");this.ctx=i,this.ctx.fillStyle="white",this.ctx.textBaseline="alphabetic",this.ctx.textAlign="left",this.ctx.font=this.contextFontFace}catch(t){M.error("Failed to create canvas rendering context",t)}},this.throttledRebuild=(0,g.P)((()=>{setTimeout((()=>this.rebuild()),0)}),1500),this.options=t,e&&(this.font=e),this.updateCanvas(this.options.height,this.options.width),this.packer=new m.cC(this.options.width,this.options.height,2*this.options.texturePadding),this.options.defaultCharset){(function(t=!1){const e=new Set(Array.from("m0123456789_-+'\"` \t")),i=[];t&&i.push([32,127]);for(const t of i)for(let i=t[0];i<t[1];i++)e.add(String.fromCharCode(i));return e})(this.options.defaultCharset===s.ASCII).forEach((t=>this.charSet.add(t)))}this.options.initialChars&&this.options.initialChars.forEach((t=>this.charSet.add(t))),this.options.squareSize&&!F(this.options.squareSize)&&M.error("font config squareSize must be a power of two")}get loaded(){return!this._loading&&this._loaded}async loadFont(){let t;S.log&&performance.mark(S.marks.bmfont);const e=`${this.options.fontFamily} for BitmapFontPacker`;if(!this.font){this._loading=!0;const i=await f(),s=await i(this.options.fontPath);this.font=s,t=new FontFace(e,`url("${this.options.fontPath}") format("woff")`,{style:`${this.options.fontStyle}`,weight:`${this.options.fontWeight}`}),await t.load();t.loaded;document.fonts.add(t)}return S.log&&performance.measure(S.marks.bmfont,S.marks.bmfont),this.scale=this.options.fontSize/this.font.unitsPerEm,this.contextFontFace=`${this.options.fontWeight} ${this.options.fontSize}px "${e}"`,this.ctx.font=this.contextFontFace,w&&M.debug({contextFontFace:this.contextFontFace,bmfont:this.font,charset:this.charSet}),this._loading=!1,this.fontFilename=`${this.options.fontFamily.toLowerCase()}-${this.options.fontWeight}-${this.options.fontSize}`+(this.options.outline?"-outline-"+this.options.outlineWidth:""),this.needsRebuild=!0,this.throttledRebuild(),{fontPath:this.options.fontPath,font:this.font,packer:this}}addChars(t){const e=this.charSet.size;return Array.from(t).forEach((t=>{this.charSet.has(t)||this._addedChars.push(t),this.charSet.add(t)})),e!==this.charSet.size&&this.loaded&&(this.needsRebuild=!0,this.throttledRebuild()),this.needsRebuild}atlas(){return this._atlas}codepointMap(){return this._codepointToTexCoord}rebuild(){if(!this.font)return;if(this.loaded&&this._addedChars.length<1)return void(this.needsRebuild=!1);T&&(M.debug(`Added ${this._addedChars.length} glyphs: \n${this._addedChars}`),this._addedChars.length=0),performance.mark(S.marks.rebuild),S.log&&performance.mark(S.marks.metrics);const t=this.getAllGlyphMetrics();S.log&&performance.measure(S.marks.metrics,S.marks.metrics),S.log&&performance.mark(S.marks.pack);const e=this.pack(t);S.log&&performance.measure(S.marks.pack,S.marks.pack),S.log&&performance.mark(S.marks.texture);const{chars:i,textures:s,codePointToTexCoord:a}=this.assembleTexture(e);S.log&&performance.measure(S.marks.texture,S.marks.texture),S.log&&performance.mark(S.marks.kern);const n=this.getKerningPairs();S.log&&performance.measure(S.marks.kern,S.marks.kern);const o=this.assembleFont(i,n,s);performance.measure(S.marks.rebuild,S.marks.rebuild),this._codepointToTexCoord=a,this._loaded=!0,this._atlas.update(s,o);const r=`Rebuilt atlas for ${this.charSet.size} chars with ${o.kernings.length} kerning pairs`;S.log?(M.debug(r,performance.getEntriesByName(S.marks.rebuild,"measure")[0],performance.getEntriesByType("measure").map((t=>({name:t.name,duration:t.duration}))),this.options),Object.values(S.marks).forEach((t=>{performance.clearMarks(t),performance.clearMeasures(t)}))):(M.debug(r,performance.getEntriesByName(S.marks.rebuild,"measure")[0]),performance.clearMarks(S.marks.rebuild),performance.clearMeasures(S.marks.rebuild))}pack(t){return this.packer.bins.length=0,this.packer.addArray(t),this.packer.bins.reverse()}assembleTexture(t){const e=[],i={},s=this.options.squareSize,a=t.map(((t,a)=>{const n=t.rects.length,{squareSize:o}=this.options,r=function(t){if(F(t))return t;let e=1;for(;e<t;)e<<=1;return e}(Math.ceil(Math.sqrt(n))),h=r*o,c=h,l=1/r;return s&&(h===this.canvas.width&&c===this.canvas.height||this.updateCanvas(c,h)),this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.options.transparent&&this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),t.rects.forEach(((t,n)=>{const d=t.data.charData;let u=t.x-d.xoffset,p=t.y+d.height+d.ymin-this.options.texturePadding;if(s){const t=n%r,e=Math.floor(n/r),s=t*o,g=e*o;u=s+o/2,p=g+o-(o-this.options.fontSize)/2,57344===d.id&&(p+=5),i[d.id]={x:s,y:g,u:s/h,v:1-(g+o)/c,page:a,uvScale:l},this.ctx.textAlign="center"}this.options.outline&&this.options.outlineWidth>0?function(t,e,i,s,a){const n=t.strokeStyle,o=t.fillStyle,r=t.lineJoin,h=t.miterLimit;t.lineJoin="miter",t.miterLimit=2,t.beginPath(),t.strokeStyle="black",t.lineWidth=a,t.strokeText(e,i,s),t.beginPath(),t.fillStyle="white",t.fillText(e,i,s),t.strokeStyle=n,t.fillStyle=o,t.lineJoin=r,t.miterLimit=h}(this.ctx,t.data.charData.char,u,p,this.options.outlineWidth):this.ctx.fillText(t.data.charData.char,u,p),d.x=t.x,d.y=t.y,d.page=a,e.push(t.data.charData)})),v&&x(this.ctx.canvas,`${this.fontFilename}_${a}.png`),this.makeCanvasTexture(a,!1)}));return{chars:e,textures:a,codePointToTexCoord:i}}getKerningPairs(){const t=[],e=[...this.charSet.values()].map((t=>this.font.charToGlyphIndex(t))).filter((t=>t>0));for(const i of e)for(const s of e){const e=`${i},${s}`;let a=this.kerningsMap[e];if(!a){a={first:i,second:s,amount:this.font.getKerningValue(i,s)*this.scale},this.kerningsMap[e]=a}a&&0!==a.amount&&t.push(a)}return t}assembleFont(t,e,i){const s=this.font.tables.os2,a=this.font.tables.name.fullName,n=a[Object.getOwnPropertyNames(a)[0]],o={pages:i.map(((t,e)=>`${this.fontFilename}_${e}.png`)),chars:t,info:{face:n,size:this.options.fontSize,bold:0,italic:0,charset:[...this.charSet.values()],unicode:1,stretchH:100,smooth:1,aa:1,padding:[0,0,0,0],spacing:[this.options.texturePadding,this.options.texturePadding],os2version:s.version},common:{lineHeight:(s.sTypoAscender-s.sTypoDescender+s.sTypoLineGap)*this.scale,base:this.font.ascender*this.scale,scaleW:this.options.width,scaleH:this.options.height,pages:this.packer.bins.length,packed:0,alphaChnl:0,redChnl:0,greenChnl:0,blueChnl:0},kernings:e};return w&&M.debug({bmFontOutput:o,kerningPairCount:e.length}),v&&(b(JSON.stringify(o),`${this.fontFilename}.json`),b(JSON.stringify(this.options,void 0,2),`${this.fontFilename}-pack-options.json`)),o}getMetrics(t){const e=2*this.options.texturePadding,i=this.scale;let s,a,n,o,r,h;const c=this.font.charToGlyph(t),l=0!==c.index;if(l){let e=this.measureMap[t];e||(e=c.getMetrics(),this.measureMap[t]=e),s=(e.xMax-e.xMin)*i,a=(e.yMax-e.yMin)*i,n=e.xMin*i,o=e.yMin*i,r=e.yMax*i,h=(c.advanceWidth||0)*i}else{const e=this.measureChar(t);s=e.width,a=e.height,n=e.xMin,o=e.yMin,r=e.yMax,h=s}return{char:t,width:s+e,height:a+e,xmin:n,ymin:o,ymax:r,xadvance:h+(this.options.outline?this.options.outlineWidth*C:0),supported:l}}measureText(t){if(!this.loaded)return;let e=0;for(const i of Array.from(t)){const{width:t}=this.measureChar(i);e+=t}return e}measureChar(t){let e=this.metricsMap[t];e||(e=this.ctx.measureText(t),this.metricsMap[t]=e);const i=e.actualBoundingBoxLeft+e.actualBoundingBoxRight;return{width:e.width||i,height:e.actualBoundingBoxAscent+e.actualBoundingBoxDescent,xMin:e.actualBoundingBoxLeft,xMax:e.actualBoundingBoxRight,yMin:-e.actualBoundingBoxDescent,yMax:e.actualBoundingBoxAscent}}getAllGlyphMetrics(){const t=[],e=this.font.ascender*this.scale,i=this.options.texturePadding;for(const s of this.charSet.values()){const a=this.getMetrics(s),n={data:{charData:{char:s,id:s.charCodeAt(0),width:a.width,height:a.height,xoffset:a.xmin-i,yoffset:e-a.ymax-i,xadvance:a.xadvance,chnl:15,ymin:a.ymin}},width:a.width,height:a.height};t.push(n)}return t}makeCanvasTexture(t,e){if(e){const t=new Uint8Array(this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data),e=new a.DataTexture(t,this.canvas.width,this.canvas.height,a.RGBAFormat);return e.needsUpdate=!0,e.flipY=!0,e}const i=new a.Texture(this.ctx.canvas);return i.name=`${this.ctx.font}_${t}`,i.format=a.RGBAFormat,i.needsUpdate=!0,i}}const _=new d.Z("FontManager"),A={fontPath:"fonts/roboto-700.woff",fontWeight:700,fontFamily:"Roboto",fontStyle:"normal",fontSize:60,width:2048,height:2048,transparent:!0,defaultCharset:s.ASCII,outline:!1,outlineWidth:4,texturePadding:6};class B{constructor(){this.defaultFontOptions=A,this.packerMap=new Map,this.optionsMap=new Map,this.parsedFontMap=new Map}static get instance(){return B._instance||(B._instance=new B),B._instance}getFontId(t=this.defaultFontOptions){const e=Object.assign(Object.assign({},this.defaultFontOptions),t),i=JSON.stringify(e);return this.optionsMap.set(i,e),i}getPacker(t){let e=this.packerMap.get(t);if(!e){const i=this.optionsMap.get(t)||JSON.parse(t),s=this.parsedFontMap.get(i.fontPath);e=new O(i,s),this.packerMap.set(t,e),e.loadFont().then((e=>{_.debug("font loaded",t,e.fontPath),this.parsedFontMap.set(e.fontPath,e.font)}))}return e}getFont(t){return this.getPacker(t).atlas()}getFontAndCodepoints(t){const e=this.getPacker(t);return{font:e.atlas(),codepointMap:e.codepointMap()}}measureText(t,e){const i=this.packerMap.get(t);if(i)return i.measureText(e)}}var D=i(7531),P=i.n(D),E=i(87804),W=i.n(E);class R extends a.Mesh{raycast(t,e){}}var L;!function(t){t.WORLD="world",t.NDC="ndc"}(L||(L={}));class I extends a.Object3D{constructor(t,e=B.instance,i=L.WORLD){var s;super(),this.config=t,this.fontManager=e,this.scaleType=i,this.bindings=[],this.update=()=>{const t=this.resolvedConfig;this.textGeometry.update(t),this.textGeometry.computeBoundingBox();const e=this.textGeometry.layout.lineHeight-this.textGeometry.layout.baseline;this.labelTextMesh.position.x=-.5*this.textGeometry.layout.width+e,this.labelTextMesh.position.y=-.5*this.textGeometry.layout.height+e,this.labelTextMesh.position.z=.25,this.unscaledWidth=this.textGeometry.layout.width+this.config.backgroundBorderWidth,this.unscaledHeight=this.textGeometry.layout.height+this.config.backgroundBorderHeight,(this.labelBackgroundMesh||this.config.backgroundAsCollider)&&this.labelBackgroundMesh.scale.set(this.unscaledWidth,this.unscaledHeight,.01),this.aspect=this.unscaledWidth/Math.max(this.unscaledHeight,.001),this.fontHeightToMeters=1/t.font.info.size,this.updateScale(),this._onGeomUpdate&&this._onGeomUpdate()};const r=void 0!==this.config.opacity?this.config.opacity:1;if(this.config.background||this.config.backgroundAsCollider){this.config.backgroundOpacity=void 0!==this.config.backgroundOpacity?this.config.backgroundOpacity:1,this.config.backgroundOpacity=this.config.background?this.config.backgroundOpacity:0;const e=new a.BoxGeometry(1,1,.01),i=new a.MeshBasicMaterial({color:t.backgroundColor,transparent:!0,depthTest:this.config.backgroundOpacity>0&&!t.disableDepth,depthWrite:this.config.backgroundOpacity>0&&!t.disableDepth,opacity:this.config.backgroundOpacity,stencilRef:1,stencilFail:a.KeepStencilOp,stencilZFail:a.KeepStencilOp,stencilZPass:a.ReplaceStencilOp,stencilFunc:a.AlwaysStencilFunc,stencilWrite:!0});this.labelBackgroundMesh=new this.config.backgroundColliderType(e,i),this.labelBackgroundMesh.position.z=-.25,this.labelBackgroundMesh.name="Label Background",this.collider=this.labelBackgroundMesh,this.add(this.labelBackgroundMesh)}const c={fontPath:`${null!==(s=t.assetBasePath)&&void 0!==s?s:""}${A.fontPath}`,outline:this.config.outline,outlineWidth:this.config.outlineWidth},l={uniforms:{map:{type:"t",value:(d=Object.assign(Object.assign({},c),{color:t.color,opacity:r})).map},color:{type:"c",value:new a.Color(d.color)},opacity:{type:"f",value:d.opacity}},vertexShader:P(),fragmentShader:W()};var d;const u=new a.RawShaderMaterial({uniforms:l.uniforms,fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,side:a.DoubleSide,transparent:!0,depthTest:!1,depthWrite:!1,opacity:r});u.name="Label Text",this.fontId=this.fontManager.getFontId(c);const p=this.fontManager.getFont(this.fontId);u.uniforms.map.value=p.textures[0],this.bindings.push(p.onChanged((()=>{u.uniforms.map.value=p.textures[0],this.update()})));const g=this.resolvedConfig,f=g.font;this.textGeometry=(0,n.Y)(g),this.labelTextMesh=new R(this.textGeometry,u),this.labelTextMesh.name="Label Text",this.labelTextMesh.renderOrder=10;const m=(new a.Quaternion).setFromAxisAngle(o.fU.FORWARD,(0,h.Id)(180)),x=(new a.Quaternion).setFromAxisAngle(o.fU.UP,(0,h.Id)(180));this.labelTextMesh.quaternion.multiply(m).multiply(x),this.add(this.labelTextMesh),this.name="Label Container",this.fontHeightToMeters=1/f.info.size,this.scaleFactor=t.scale||this.fontHeightToMeters,this.update()}dispose(){this.bindings.forEach((t=>t.cancel())),this.textGeometry.dispose()}get resolvedConfig(){let t;if(void 0!==this.config.wordWrapWidth){const e=this.fontManager.measureText(this.fontId,this.config.text);void 0!==e&&e>this.config.wordWrapWidth&&(t=this.config.wordWrapWidth)}const e=this.fontManager.getFont(this.fontId);return Object.assign(Object.assign({},this.config),{font:e.fontData,texture:e.textures[0],width:t})}onGeomUpdate(t){this._onGeomUpdate=t}updateScale(){const t=this.config.scale*this.fontHeightToMeters;this.scale.set(t,t,t)}get text(){return this.config.text}set text(t){t!==this.name&&(this.config.text=t,this.name=t,this.fontManager.getFont(this.fontId).addCharsIfNeeded(t),this.update())}get mesh(){return this.labelTextMesh}get scaleFactor(){return this.config.scale}set scaleFactor(t){this.scaleFactor!==t&&(this.config.scale=t,this.updateScale())}get opacity(){return void 0!==this.config.opacity?this.config.opacity:1}set opacity(t){if(t!==this.config.opacity){this.config.opacity=t;const e=t>0&&!this.config.disableDepth;if(this.config.background){const i=this.labelBackgroundMesh.material;i.opacity=Math.min(this.config.backgroundOpacity||1,t),i.depthWrite=t>.15,i.depthTest=e}const i=this.labelTextMesh.material;i.uniforms.opacity.value=t,i.depthTest=e,this.visible=t>0}}setColorHex(t){const e=this.labelTextMesh.material.uniforms.color;e.value.getHex()!==t&&e.value.setHex(t)}setRenderLayer(t){this.labelTextMesh.layers.mask=t.mask,this.labelBackgroundMesh&&(this.labelBackgroundMesh.layers.mask=t.mask)}setRenderOrder(t){this.renderOrder=t,this.labelTextMesh.renderOrder=t,this.labelBackgroundMesh&&(this.labelBackgroundMesh.renderOrder=t)}setPosition(t,e=(t=>t)){this.position.copy(e(t))}setOrientation(t,e=0){this.quaternion.copy(t),0!==e&&this.rotateZ(-e*h.Ue)}scaleBillboard(t,e,i,s,a,n,o=H.SCALE_DEFAULT){if(0!==i.elements[15])this.scaleFactor=.2*o*s*(H.ORTHO_IDEAL_HEIGHT/a);else{const h=(0,r.D_)(this.position,t,e,i.asThreeMatrix4()),d=Math.abs(h.x);if(d<1){const e=(0,l.mY)(i,t,this.position,a,o),r=((0,c.uZ)(n,1,2.5)+s)*H.SCALE_ASPECT,h=1+H.SCALE_NDC-d*H.SCALE_NDC-r,u=Math.max(Math.min(1/e*h,3),.001);this.scaleType===L.NDC?this.scaleFactor=u:this.scaleFactor=Math.min(u*H.NDC_MULT,o*H.SCALE_WORLD)}else this.scaleFactor=.001}this.updateScale()}}const H={SCALE_DEFAULT:.1,SCALE_WORLD:4,SCALE_NDC:.5,SCALE_ASPECT:.035,DEPTH_WRITE_THRESHOD:.15,ORTHO_IDEAL_HEIGHT:1500,NDC_MULT:1.15};class ${constructor(t){this.currentTextConfig=$.defaultTextConfig,t?this.updateTextStyle(t):this.updateTextStyle($.defaultTextConfig)}updateTextStyle(t){this.currentTextConfig=Object.assign(Object.assign({},this.currentTextConfig),t)}createLabel(t={text:""}){return new I(Object.assign(Object.assign({},this.currentTextConfig),t))}static makeConfig(t){return Object.assign(Object.assign({},$.defaultTextConfig),t)}}$.defaultTextConfig={text:"",align:"center",wordWrapWidth:void 0,color:"black",backgroundColor:"white",backgroundBorderWidth:50,backgroundBorderHeight:30,background:!0,backgroundAsCollider:!0,backgroundColliderType:a.Mesh,scale:1,outline:!1,outlineWidth:4}},87804:t=>{t.exports="precision highp float;precision highp int;uniform sampler2D map;uniform vec3 color;uniform float opacity;varying vec2 vUv;void main(){vec4 sample=texture2D(map,vUv).rgba;gl_FragColor=vec4(sample.rgb*color.rgb,clamp(sample.a*opacity,0.,1.));}"},7531:t=>{t.exports="precision highp float;precision highp int;attribute vec2 uv;attribute vec4 position;uniform mat4 projectionMatrix;uniform mat4 modelViewMatrix;varying vec2 vUv;void main(){vUv=uv;gl_Position=projectionMatrix*modelViewMatrix*position;}"}}]);